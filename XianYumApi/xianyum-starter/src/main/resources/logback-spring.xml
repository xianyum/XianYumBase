<configuration>
  <!-- 定义日志的根目录 -->
  <springProperty scope="context" name="projectName" source="spring.application.name" defaultValue="BaseApi"/>

  <property name="LOG_HOME" value="logs"/>
  <property name="PROJECT_NAME" value="${projectName}"/>

  <property name="FILE_PATTEN"  value="[%level] [%date{ISO8601}] [%logger] [%thread] [%X{clientIp}] [%X{requestId}] [%X{serverIp}] %msg%n"/>

  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>[%highlight(%-5level)] [%date{ISO8601}] [%boldGreen(%logger)] [%boldYellow(%thread)] [%X{clientIp}]
        [%cyan(%X{requestId})] [%X{serverIp}] %msg%n
      </pattern>
    </encoder>
  </appender>

  <!-- 按照每天生成日志文件 -->
  <!-- 出错日志 appender  -->
  <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 按天回滚 daily -->
      <!-- log.dir 在maven profile里配置 -->
      <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/logstash/ERROR-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <!-- 日志最大的历史 10 day -->
      <maxHistory>10</maxHistory>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!--文件达到 最大128MB时会被压缩和切割 -->
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_PATTEN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 只打印错误日志 -->
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>



  <!-- 日志 appender  -->
  <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 按天回滚 daily -->
      <!-- log.dir 在maven profile里配置 -->
      <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/logstash/INFO-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <!-- 日志最大的历史 10天 -->
      <maxHistory>10</maxHistory>
      <timeBasedFileNamingAndTriggeringPolicy
              class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!--文件达到 最大128MB时会被压缩和切割 -->
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_PATTEN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>ACCEPT</onMismatch>
    </filter>
  </appender>



  <appender name="plumelog" class="com.plumelog.lite.logback.appender.LiteAppender">
    <appName>plumelog</appName>
    <!-- 日志存储位置 -->
    <logPath>/plumelog/lite</logPath>
    <!-- 日志保留天数 -->
    <keepDay>30</keepDay>
  </appender>

  <!-- 添加 ref-->
  <root level="INFO">
    <appender-ref ref="plumelog"/>
  </root>



  <logger name="org.hibernate" level="WARN"/>
  <logger name="org.springframework" level="WARN"/>
  <logger name="io.undertow" level="INFO"/>
  <logger name="springfox.documentation" level="WARN"/>
  <logger name="org.xnio.nio" level="WARN"/>
  <logger name="com.anji.captcha" level="WARN"/>
  <logger name="com.geccocrawler.gecco" level="WARN"/>
  <logger name="org.reflections.Reflections" level="WARN"/>

  <!-- root将级别为“INFO”及大于“INFO”的日志信息交给已经配置好的名为“Console”的appender处理，“Console”appender将信息打印到Console； -->
  <!--ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF。-->
  <springProfile name="dev,test,uat">
    <!-- configuration to be enabled when the "production" profile is not active -->
    <root level="INFO">
      <appender-ref ref="CONSOLE"/>
      <appender-ref ref="ERROR"/>
      <appender-ref ref="DEBUG"/>
    </root>
  </springProfile>

  <springProfile name="pred,prod,tencent">
    <root level="INFO">
      <appender-ref ref="CONSOLE"/>
      <appender-ref ref="ERROR"/>
      <appender-ref ref="DEBUG"/>
    </root>
  </springProfile>

</configuration>
